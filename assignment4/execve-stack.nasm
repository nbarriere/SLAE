; Filename:      execve-stack.nasm
; Author:        Nicolas Barri√®re
; Student ID:    SLAE - 1398
; Created Date:  05.12.2018
; Note:          x86 code but assembled and linked on x64
; Assembler:     nasm -f elf32 execve-stack.nasm -o execve-stack.o
; Linker:        ld -m elf_i386 execve-stack.o -o execve-stack
; Assembly dump: objdump -d ./execve-stack|grep '[0-9a-f]:'|grep -v 'file'|cut -f2 -d:|cut -f1-6 -d' '|tr -s ' '|tr '\t' ' '|sed 's/ $//g'|sed 's/ /\\x/g'|paste -d '' -s |sed 's/^/"/'|sed 's/$/"/g'

global _start

section .text

_start:

; int execve(const char *filename, char *const argv[],char *const envp[]);

	xor eax, eax     ; Clear eax register
	push eax         ; Add null byte in stack

	push 0x68732f2f  ; "hs//"
	push 0x6e69622f  ; "nib/"

	mov ebx, esp	   ; ebx = pointer to stack

	push eax         ; Add null byte in stack
	mov edx, esp	   ; edx = envp = 0

	push ebx
	mov ecx, esp	   ; ecx = argv = 0

	mov al, 11	     ; sys_execve
	int 0x80         ; syscall
